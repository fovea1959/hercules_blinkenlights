--- cgibin_original.c	2017-10-24 10:51:44.538228600 -0400
+++ cgibin.c	2017-10-24 10:23:45.335542302 -0400
@@ -1108,6 +1108,73 @@
 }
 #endif /*defined(OPTION_MIPS_COUNTING)*/
 
+void cgibin_blinkenlights_cpu(WEBBLK *webblk)
+{
+    REGS *regs;
+    QWORD   qword;                            /* quadword work area      */
+
+    int cpu, i;
+
+    hprintf(webblk->sock,"Expires: 0\n");
+    hprintf(webblk->sock,"Content-type: text/csv;\n\n");   /* CSV document */
+
+    for (cpu = 0; cpu < MAX_CPU; cpu++) {
+        regs = sysblk.regs[cpu];
+        if (!regs) regs = &sysblk.dummyregs;
+
+        if( regs->arch_mode != ARCH_900 )
+        {
+            copy_psw (regs, qword);
+            hprintf(webblk->sock, "CPU%4.4d,PSW,%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X\n",
+		cpu, 
+                qword[0], qword[1], qword[2], qword[3],
+                qword[4], qword[5], qword[6], qword[7]);
+        }
+        else
+        {
+            copy_psw (regs, qword);
+            hprintf(webblk->sock, "CPU%4.4d,PSW,%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X\n",
+		cpu,
+                qword[0], qword[1], qword[2], qword[3],
+                qword[4], qword[5], qword[6], qword[7],
+                qword[8], qword[9], qword[10], qword[11],
+                qword[12], qword[13], qword[14], qword[15]);
+        }
+
+        if(regs->arch_mode != ARCH_900)
+            for (i = 0; i < 16; i++)
+                hprintf(webblk->sock, "CPU%4.4d,GR%2.2d,%8.8X\n", cpu, i, regs->GR_L(i));
+        else
+            for (i = 0; i < 16; i++)
+                hprintf(webblk->sock, "CPU%4.4d,GR%1.1X,%16.16" I64_FMT "X\n", i,
+                    (U64)regs->GR_G(i));
+
+    }
+}
+
+void cgibin_blinkenlights_devices(WEBBLK *webblk)
+{
+DEVBLK *dev;
+char   *class;
+
+    hprintf(webblk->sock,"Expires: 0\n");
+    hprintf(webblk->sock,"Content-type: text/csv;\n\n");   /* CSV document */
+
+    for(dev = sysblk.firstdev; dev; dev = dev->nextdev)
+        if(dev->pmcw.flag5 & PMCW5_V)
+        {
+             (dev->hnd->query)(dev, &class, 0, NULL);
+
+             hprintf(webblk->sock,"DEV,%4.4X,%4.4X,%s,%4.4X,%s%s%s\n",
+                                   dev->devnum,
+                                   dev->subchan,
+                                   class,
+                                   dev->devtype,
+                                   (dev->fd > 2 ? "open " : ""),
+                                   (dev->busy ? "busy " : ""),
+                                   (IOPENDING(dev) ? "pending " : ""));
+        }
+}
 
 //  cgibin_hwrite: helper function to output HTML
 
@@ -1248,6 +1315,8 @@
     { "registers/general", &cgibin_reg_general },
     { "registers/control", &cgibin_reg_control },
     { "registers/psw", &cgibin_psw },
+    { "blinkenlights/cpu", &cgibin_blinkenlights_cpu },
+    { "blinkenlights/devices", &cgibin_blinkenlights_devices },
 #if defined(OPTION_MIPS_COUNTING)
     { "xml/rates", &cgibin_xml_rates_info },
 #endif /*defined(OPTION_MIPS_COUNTING)*/
